version: "3"

#Create a network that links containers
services:
#   #Create a container for the ROS master
  #ros-master:
  #  image: ros:noetic-ros-core
  #  network_mode: "host"
  #  command: roscore

  #Create the Melodic Container
  # ros-melodic:
  #   build:
  #     context: .
  #     dockerfile: melodic.Dockerfile
  # # depends_on:
  # #   - ros-master
  #   tty: true
  #   stdin_open: true
  #   privileged: true
  #   network_mode: "host"
  #   volumes:
  #       - ../catkin_ws/src:/root/catkin_ws/src
  #   environment:
  #       - SETUP=/root/catkin_ws/devel/setup.bash
  #       - BUILDLIST= elevation_msgs traversability_mapping #Only these packages will be build
  #       - ROSPACKAGE=traversability_mapping
  #       - LAUNCHFILE=offline.launch
  #   command: roscore

  # ros-melodic-trav:
  #   build:
  #     context: .
  #     dockerfile: melodic.Dockerfile
  #   depends_on:
  #     - ros-melodic
  #   privileged: true
  #   network_mode: "host"
  #   # volumes:
  #   #     - type: bind
  #   #       source: ../catkin_ws/src
  #   #       target: /root/catkin_ws/src
  #   volumes:
  #       - ../catkin_ws/src:/root/catkin_ws/src
  #   environment:
  #       - SETUP=/root/catkin_ws/devel/setup.bash
  #       - ROSPACKAGE=traversability_mapping
  #       - LAUNCHFILE=offline.launch
  #   command: roslaunch traversability_mapping offline.launch
  
  # ##Create the Noetic Container
  ros-noetic:
    build:
      context: .
      dockerfile: noetic.Dockerfile
    tty: true
    stdin_open: true
    privileged: true
    network_mode: "host"
    volumes:
        - ../catkin_ws/src:/root/catkin_ws/src
        - ../catkin_ws/build:/root/catkin_ws/build
        - /dev/dri:/dev/dri
        - /tmp/.X11-unix:/tmp/.X11-unix:rw
        - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
        - ../catkin_ws/src/gps_waypoint_nav/.mapviz_config:/root/.mapviz_config
    environment:
        - SETUP=/root/catkin_ws/devel/setup.bash
        - BUILDLIST= elevation_mapping elevation_mapping_demos gps_waypoint_nav ig_lio metrics_extractor navigation_final_semfire_pillot unitree_legged_msgs kindr kindr_ros message_logger point_cloud_io #Only these packages will be build
        - ROSPACKAGE= ig_lio
        - LAUNCHFILE= noetic_main_elev.launch
        - DISPLAY=${DISPLAY}
        - QT_X11_NO_MITSHM=1
    command: ./noetic-launch.sh

  # ros-noetic-elev:
  #   build:
  #     context: .
  #     dockerfile: noetic.Dockerfile
  #   depends_on:
  #     - ros-noetic
  #   privileged: true
  #   network_mode: "host"
  #   # volumes:
  #   #     - type: bind
  #   #       source: ../catkin_ws/src
  #   #       target: /root/catkin_ws/src
  #   volumes:
  #       - ../catkin_ws/src:/root/catkin_ws/src
  #   environment:
  #       - SETUP=/root/catkin_ws/devel/setup.bash
  #       - ROSPACKAGE=ig_lio
  #       - LAUNCHFILE=noetic_main_elev.launch       
  #   command: roslaunch ig_lio noetic_main_elev.launch

  # ros-noetic-mebt:
  #   build:
  #     context: .
  #     dockerfile: noetic.Dockerfile
  #   depends_on:
  #     - ros-noetic
  #   privileged: true
  #   network_mode: "host"
  #   # volumes:
  #   #     - type: bind
  #   #       source: ../catkin_ws/src
  #   #       target: /root/catkin_ws/src
  #   volumes:
  #       - ../catkin_ws/src:/root/catkin_ws/src
  #   environment:
  #       - SETUP=/root/catkin_ws/devel/setup.bash
  #       - ROSPACKAGE=ig_lio
  #       - LAUNCHFILE=noetic_main_mebt.launch     
  #   command: roslaunch ig_lio noetic_main_mebt.launch

  # ros-noetic-trav:
  #   build:
  #     context: .
  #     dockerfile: noetic.Dockerfile
  #   depends_on:
  #     - ros-noetic
  #   privileged: true
  #   network_mode: "host"
  #   # volumes:
  #   #     - type: bind
  #   #       source: ../catkin_ws/src
  #   #       target: /root/catkin_ws/src
  #   volumes:
  #       - ../catkin_ws/src:/root/catkin_ws/src
  #   environment:
  #       - SETUP=/root/catkin_ws/devel/setup.bash
  #       - ROSPACKAGE=ig_lio
  #       - LAUNCHFILE=noetic_main_trav.launch  
  #   command: roslaunch ig_lio noetic_main_trav.launch


  #  viz:
  #  image: osrf/ros:kinetic-desktop-full
  #  container_name: ros_visualizer
  #  depends_on:
  #    - ros-master
  #  network_mode: "host"
  #  environment:
  #    - "DISPLAY"
  #    - "QT_X11_NO_MITSHM=1" #fix some QT bugs
  #  user: 1000:1000 #adapt as needed!
  #  env_file: .env
  #  volumes: 
  #    #share your x11 socket and permissions to the container
  #    - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #    - /etc/group:/etc/group:ro
  #    - /etc/passwd:/etc/passwd:ro
  #    - /etc/shadow:/etc/shadow:ro
  #    - /etc/sudoers:/etc/sudoers:ro
  #    - /etc/sudoers.d:/etc/sudoers.d:ro
  #    - /home/$USER:/home/$USER:rw #share your home with write permissions
  #    - ../rviz:/rviz/:rw #Pass the Rviz config files
  #  command: rqt